/* DO NOT EDIT | Generated by gyro */

import RealmSwift
import Foundation

final class SearchDetail: Object, Decodable {
  private enum Keys: String, CodingKey {
    case email = "email"
    case phone_number = "phone_number"

    }

  @objc dynamic var email: String?
  @objc dynamic var phone_number: String?




  convenience required init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: Keys.self)
    let email = try? container.decode(String?.self, forKey: .email)
    let phone_number = try? container.decode(String?.self, forKey: .phone_number)
    self.init(email: email, phone_number: phone_number)
  }

  convenience init(email: String?, phone_number: String?) {
    self.init()
    self.email = email
    self.phone_number = phone_number

  }
}
